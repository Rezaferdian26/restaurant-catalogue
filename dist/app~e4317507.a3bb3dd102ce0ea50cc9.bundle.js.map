{"version":3,"file":"app~e4317507.a3bb3dd102ce0ea50cc9.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/utils/search-initiator.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js","webpack://restaurant-apps/./src/scripts/utils/user-review.js"],"sourcesContent":["import DetailRestaurant from '../views/pages/detail-restaurant';\r\nimport ListRestaurant from '../views/pages/list-restaurant';\r\nimport Favorite from '../views/pages/favorite';\r\n\r\nconst routes = {\r\n  '/': ListRestaurant, // default page\r\n  '/list-restaurant': ListRestaurant,\r\n  '/favorite': Favorite,\r\n  '/detail/:id': DetailRestaurant,\r\n};\r\n\r\nexport default routes;\r\n","const UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\r\n      + (splitedUrl.id ? '/:id' : '')\r\n      + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\n\r\nexport default UrlParser;\r\n","const drawerInitiator = {\r\n  init({\r\n    button, drawer, content, header,\r\n  }) {\r\n    button.addEventListener('click', (event) => {\r\n      this._toggleDrawer(event, drawer);\r\n    });\r\n\r\n    content.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer);\r\n    });\r\n\r\n    header.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer);\r\n    });\r\n  },\r\n\r\n  _toggleDrawer(event, drawer) {\r\n    event.stopPropagation();\r\n    drawer.classList.toggle('open');\r\n  },\r\n\r\n  _closeDrawer(event, drawer) {\r\n    event.stopPropagation();\r\n    drawer.classList.remove('open');\r\n  },\r\n};\r\n\r\nexport default drawerInitiator;\r\n","import { createLikeRestaurantButtonTemplate, createUnlikeRestaurantButtonTemplate } from '../views/templates/template-creator';\r\n\r\nconst LikeButtonPresenter = {\r\n  async init({ likeButtonContainer, favoriteRestaurants, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer;\r\n    this._restaurant = restaurant;\r\n    this._favoriteRestaurants = favoriteRestaurants;\r\n\r\n    await this._renderButton();\r\n  },\r\n\r\n  async _renderButton() {\r\n    const { id } = this._restaurant;\r\n\r\n    if (await this._isrestaurantExist(id)) {\r\n      this._renderLiked();\r\n    } else {\r\n      this._renderLike();\r\n    }\r\n  },\r\n\r\n  async _isrestaurantExist(id) {\r\n    const restaurant = await this._favoriteRestaurants.getRestaurant(id);\r\n    return !!restaurant;\r\n  },\r\n\r\n  _renderLike() {\r\n    this._likeButtonContainer.innerHTML = createLikeRestaurantButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.putRestaurant(this._restaurant);\r\n      this._renderButton();\r\n    });\r\n  },\r\n\r\n  _renderLiked() {\r\n    this._likeButtonContainer.innerHTML = createUnlikeRestaurantButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.deleteRestaurant(this._restaurant.id);\r\n      this._renderButton();\r\n    });\r\n  },\r\n};\r\n\r\nexport default LikeButtonPresenter;\r\n","import RestaurantApiSource from '../data/restaurant-api-source';\r\nimport { createRestaurantItemTemplate } from '../views/templates/template-creator';\r\n\r\nclass SearchInitiator {\r\n  constructor() {\r\n    this._queryElement = document.querySelector('#search-bar input');\r\n    this._queryElement.addEventListener('keypress', (event) => {\r\n      if (event.key === 'Enter') {\r\n        this._search = this._queryElement.value.trim();\r\n        this._init();\r\n      }\r\n    });\r\n  }\r\n\r\n  async _init() {\r\n    const section = document.querySelector('section');\r\n    try {\r\n      const restaurantsContainer = document.createElement('div');\r\n      restaurantsContainer.setAttribute('id', 'content');\r\n      const result = await RestaurantApiSource.searchRestaurant(this._search);\r\n      // ketika user mencari input kosong\r\n      if (result.error) {\r\n        window.location.reload();\r\n      } else {\r\n        section.innerHTML = `\r\n            <h3 class=\"text-center p-2\">Hasil Pencarian ${this._search}</h3>\r\n            <p class='text-center mb-2'>${result.founded} hasil.</p>\r\n          `;\r\n        result.restaurants.forEach((restaurant) => {\r\n          restaurantsContainer.innerHTML += createRestaurantItemTemplate(restaurant);\r\n        });\r\n      }\r\n      section.append(restaurantsContainer);\r\n      document.querySelector('#search-bar input').value = '';\r\n    } catch {\r\n      section.innerHTML = `\r\n          <div tabindex=\"0\" id=\"error-page\">\r\n            <h3 class=\"text-center\">Koneksi internetmu terganggu</h3>\r\n            <p class=\"text-center\">Pastikan internetmu lancar dengan cek ulang paket data, WIFI, atau jaringan di tempatmu</p>\r\n            <button class=\"refresh\">Coba lagi</button>\r\n          </div>\r\n          `;\r\n      document.querySelector('#search-bar input').value = '';\r\n      const button = document.querySelector('#error-page button');\r\n      button.addEventListener('click', () => {\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchInitiator;\r\n","import * as WorkboxWindow from 'workbox-window';\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser');\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('/sw.bundle.js');\r\n  try {\r\n    await wb.register();\r\n    console.log('Service worker registered');\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n","/* eslint-disable no-unused-vars */\r\nimport API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nconst UserReview = {\r\n  add(id) {\r\n    const saveButtonReview = document.querySelector('.review-wrapper button');\r\n    saveButtonReview.addEventListener('click', async () => {\r\n      const inputName = document.querySelector('.review-wrapper input#username');\r\n      const inputReview = document.querySelector('.review-wrapper textarea#review');\r\n      const review = {\r\n        id,\r\n        name: inputName.value,\r\n        review: inputReview.value,\r\n      };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(review),\r\n      };\r\n      const response = await fetch(API_ENDPOINT.ADD_REVIEW, options);\r\n      const responseJson = await response.json();\r\n      if (responseJson.error) {\r\n        alert(responseJson.message);\r\n      } else {\r\n        alert('Review berhasil ditambah');\r\n        inputName.value = '';\r\n        inputReview.value = '';\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default UserReview;\r\n"],"names":["ListRestaurant","Favorite","DetailRestaurant","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","header","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","likeButtonContainer","favoriteRestaurants","restaurant","_likeButtonContainer","_restaurant","_favoriteRestaurants","_renderButton","_isrestaurantExist","_renderLiked","_renderLike","getRestaurant","innerHTML","createLikeRestaurantButtonTemplate","document","querySelector","putRestaurant","createUnlikeRestaurantButtonTemplate","deleteRestaurant","i","_queryElement","key","_search","value","trim","_init","section","restaurantsContainer","createElement","setAttribute","RestaurantApiSource","result","error","reload","founded","restaurants","forEach","createRestaurantItemTemplate","append","navigator","console","log","wb","WorkboxWindow","register","add","inputName","inputReview","review","name","options","method","headers","body","JSON","stringify","fetch","API_ENDPOINT","response","json","responseJson","alert","message"],"sourceRoot":""}